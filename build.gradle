buildscript {
    dependencies {
        classpath "co.riiid:gradle-github-plugin:0.4.2"
        classpath "com.google.gradle:osdetector-gradle-plugin:1.4.0"
        classpath "com.google.protobuf:protobuf-gradle-plugin:0.8.4"
        classpath ("com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.0") {
            exclude group: 'nekohtml', module: 'xercesMinimal'
        }
        classpath "com.netflix.nebula:gradle-lint-plugin:8.3.1"
        classpath "gradle.plugin.org.jlleitschuh.gradle:ktlint-gradle:3.0.1"
        classpath "gradle.plugin.org.jmailen.gradle:kotlinter-gradle:1.7.0"
        classpath "io.ebean:ebean-gradle-plugin:11.5.1"
        classpath "net.researchgate:gradle-release:2.6.0"
        classpath "org.ajoberstar:gradle-git:1.7.2"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.junit.platform:junit-platform-gradle-plugin:1.1.0"
        classpath "se.transmode.gradle:gradle-docker:1.2"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:0.9.16-eap-3"
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.17.0'
        classpath 'com.github.shyiko:ktlint:0.15.1'
    }
    repositories {
        mavenLocal()
        jcenter()
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url "https://dl.bintray.com/jetbrains/spek/" }
        maven { url "https://dl.bintray.com/kotlin/kotlin-eap/" }
    }
}

apply from: 'setuprelease.gradle'

apply plugin: 'nebula.lint'
apply plugin: 'com.github.ben-manes.versions'

task replaceVersion(type: Copy) {
    from('kubernetes') {
        include '**/*.yaml'
        expand([version: project.version])
    }
    into "${project.buildDir}/kubernetes/"
    includeEmptyDirs = false
}

assemble.dependsOn replaceVersion

subprojects {
    apply plugin: 'idea'
    apply plugin: 'nebula.lint'

    gradleLint.criticalRules = ['all-dependency', 'duplicate-dependency-class']
    gradleLint.rules = ['archaic-wrapper']

    configurations {
        compile.exclude(group: 'org.glassfish.hk2.external', module: 'javax.inject')
    }

    idea {
        module {
            outputDir = file('build/idea-out')
            testOutputDir = file('build/idea-testout')
        }
    }

    repositories {
        mavenLocal()
        mavenCentral()
    }

    sourceCompatibility = ext.java_version
    targetCompatibility = ext.java_version
}

group 'com.sourceforgery.tachikoma'

apply plugin: 'com.google.protobuf'
apply plugin: 'java'
apply plugin: 'idea'

dependencies {
    compile "com.google.guava:guava:$guava_version"
    compile "io.grpc:grpc-core:$grpc_version"
    compile "com.google.protobuf:protobuf-java:$protoc_version"
    protobuf project(':tachikoma-frontend-api-proto')

    compile project(":tachikoma-protobuf-annotations")
    compile "io.grpc:grpc-protobuf:$grpc_version"
    compile "io.grpc:grpc-stub:$grpc_version"
}

sourceSets {
    main {
        java {
            srcDirs += file("${buildDir}/generated/source/proto/main/grpc/")
            srcDirs += file("${buildDir}/generated/source/proto/main/java/")
        }
    }
}

idea {
    module {
        sourceDirs += file("${buildDir}/generated/source/proto/main/java/")
        sourceDirs += file("${buildDir}/generated/source/proto/main/grpc/")
    }
}


if (JavaVersion.current().isJava8Compatible()) {
    allprojects {
        tasks.withType(Javadoc) {
            options.addStringOption('Xdoclint:none', '-quiet')
        }
    }
}

task sourceJar(type: Jar) {
    from sourceSets.main.allJava
    classifier = 'source'
}
assemble.dependsOn sourceJar

task javadocJar(type: Jar, dependsOn: javadoc) {
    from javadoc.destinationDir
    classifier = 'javadoc'
}
assemble.dependsOn javadocJar

publishing {
    publications {
        TachikomaFrontendApiJvm(MavenPublication) {
            from components.java
            artifactId project.name

            artifact sourceJar {
                classifier "sources"
            }
            artifact javadocJar {
                classifier "javadoc"
            }
        }
    }
}

bintray {
    publish = true

    user = System.getenv("BINTRAY_USER")
    key = System.getenv("BINTRAY_KEY")
    publications = ['TachikomaFrontendApiJvm']
    pkg {
        repo = 'Tachikoma'
        name = 'tachikoma'
    }
}

protobuf {
    protoc {
        // The artifact spec for the Protobuf Compiler
        artifact = "com.google.protobuf:protoc:$protoc_version"
    }

    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:$grpc_version"
        }
    }

    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
}
